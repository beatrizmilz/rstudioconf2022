---
title: "making awesome automations with **Github Actions**"
author: "Beatriz Milz"
date: "rstudio::conf 2022 | July 2022   <br><br> Slides: **beatrizmilz.github.io/rstudioconf2022** "
format: 
  revealjs:
    width: 1600
    height: 900
    self-contained: false
    incremental: false
    #logo: "img/logo.png"
    footer: "Slides by [Beatriz Milz](https://beamilz.com) (@BeaMilz), made with [Quarto](https://quarto.org/docs/presentations/revealjs/index.html)."
    theme: ["custom.scss"]
    slide-number: c/t
    show-slide-number: all
    hash-type: number
    preview-links: false
# <!-- ::: {.notes} -->
# <!-- Slide 1:
# Hi everyone! It's a great honor to be here. My name is Beatriz, and today I'm going to talk about how to make awesome automations with GitHub Actions. -->
# <!-- ::: -->
---

## **Run scripts...** üôã‚Äç‚ôÄÔ∏èÔ∏è {.center .center-y}

### every day?

<br>

### every week?

<br>

### every month?

::: notes
-   So do you have to do a task using R in a regular basis? like every day, once a week, once a month, for example?
:::

##  {.center .center-y}

![Logo of GitHub Actions](img/githubactions.jpg){fig-align="center" heigth="100%"}

::: notes
-   If your answer is yes, GitHub Actions can be usefull to you!
:::

## What is GitHub Actions? {.center .center-y}

<br>

### How can we run R Scripts with it?

::: notes
-   and Today my aim is to answer these questions: "What is GitHub Actions? How can we run R Scripts with it?"
:::

## R packages üì¶

<br>

```{r}
#| eval: false
#| include: true
#| echo: true
# Load usethis
library(usethis)
# run check
use_github_action("check-standard")
# build pkgdown site
use_github_action("pkgdown")
```

<br>

See other examples in: [github.com/r-lib/actions/](https://github.com/r-lib/actions/tree/v2/examples)

::: notes
-   So, Actions is a service from GitHub that allows us to automate code executions in the cloud.

-   GitHub Actions has been heavily used in some contexts, like runing checks in packages, building the package website, and so on.
    Package developers can easily start using Acitons with the help of the package usethis. There are several awesome examples in the r-lib/actions repository!
:::

##  {.center}

::: center-y
#### How important is GHA to RStudio?
:::

<br>

::: columns
::: {.column .center width="70%"}
```{r graph}
#| fig.height: 5.8
#| fig.width: 8
#| dpi: 600
#| fig.alt: "This image is a line plot made with ggplot2, it shows  GitHub Actions runs by RStudio's organization on GitHub. In the X axis, we have month/year and in the Y axis we have the total GitHub Actions runs per month. We can see that the Actions runs increased from 4k per month in May/2020 to around 18k per month in May/2022." 
# knitr::include_graphics("img/plot_zoom.png")
graph <- readr::read_rds("graph.rds")
graph
```
:::

::: {.column .rstudioslide width="30%"}
-   Completed action runs
-   Public repositories from:
    -   [rstudio](https://github.com/rstudio)
    -   [tidyverse](https://github.com/tidyverse)
    -   [r-lib](https://github.com/r-lib)
    -   [mlverse](https://github.com/mlverse)
    -   [tidymodels](https://github.com/tidymodels)
    -   [quarto-dev](https://github.com/quarto-dev)
:::
:::

::: {.notes}
-   But, how importat is GitHub Actions to RStudio? The tidyverse packages that we all use and other projects from RStudio uses Actions. This plot shows how the use of actions has been increasing in repositories in the organizations from Rstudio, such as : rstudio, tidyverse, r-lib, mlverse, tidymodels and quarto. Actions are important to run checks on code changes and pull requests, update the documentation and website of our favorite packages. In two years, the number of action runs per month increased more than 4 times. !
:::

## What else can we do? {.wow .center}

::: {.notes}

But what about people that are not package developers?
What can be done apart from package development tasks?


:::

##  Run arbitrary R scripts {.center}

-   Scrape data from the internet

-   Run reports with RMarkdown or Quarto

-   Send emails

-   Save results

::: {.notes}


This are some of the things that you can do with Actions: Scrape data from the internet, render RMarkdown or Quarto files, save results from an analysis, and even send them on an email!

:::

##  {}


```{yml}
#| eval: false
#| include: true
#| echo: true
#| classes: codeyml
#| code-line-numbers: "1,2,3,4"
on: # what triggers the workflow?
  workflow_dispatch: # start when pressing a button
  schedule: 
  - cron: "0 0 * * *" # run everyday

name: execute-r-script # name of the workflow

jobs: # what the workflow should do?
  execute-r-script:
    runs-on: ubuntu-latest # Run on Ubuntu
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-r@v2 # Install R
        with: 
          use-public-rspm: true    
      - name: run-script
        run: Rscript my_awesome_R_script.R  # Run R script
```

::: {.notes}


This is an example of a basic workflow. It is a YAML file, and in first lines we describe what triggers the workflow, so in what conditions should the workflow run? In this case, it runs everyday but we also get a button to start it.

:::

## {}

```{yml}
#| eval: false
#| include: true
#| echo: true
#| classes: codeyml
#| code-line-numbers: "6"
on: # what triggers the workflow?
  workflow_dispatch: # start when pressing a button
  schedule: 
  - cron: "0 0 * * *" # run everyday

name: execute-r-script # name of the workflow

jobs: # what the workflow should do?
  execute-r-script:
    runs-on: ubuntu-latest # Run on Ubuntu
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-r@v2 # Install R
        with: 
          use-public-rspm: true    
      - name: run-script
        run: Rscript my_awesome_R_script.R  # Run R script
```

::: {.notes}


We can also name the workflow :)

:::

## {}

```{yml}
#| eval: false
#| include: true
#| echo: true
#| classes: codeyml
#| code-line-numbers: "8,9,10,11,12,13,14,15,16,17"
on: # what triggers the workflow?
  workflow_dispatch: # start when pressing a button
  schedule: 
  - cron: "0 0 * * *" # run everyday

name: execute-r-script # name of the workflow

jobs: # what the workflow should do?
  execute-r-script:
    runs-on: ubuntu-latest # Run on Ubuntu
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-r@v2 # Install R
        with: 
          use-public-rspm: true    
      - name: run-script
        run: Rscript my_awesome_R_script.R  # Run R script
```

::: {.notes}


And in `jobs` we describe what the workflow should do. Imagine that its a brand new computer with no R installed, and we have to do all the setup in this step! In this example, we are using Ubuntu, installing R, and then running an R script. If we have anything to be saved in the repository, we can also add git commands to do so!

:::

##  More examples... {.center}

[![](img/blog.png){fig-align="center" width="60%"}](https://beamilz.com/series-gha.html)

<center>
<https://beamilz.com/series-gha.html>
</center>

::: {.notes}
-   I really love this topic, but this is a 5 minute talk, So, In my blog, you can find posts about Actions, with examples! And there are more posts in the oven :) 
:::

## Thanks! {.center}

-   [RStudio](https://www.rstudio.com/) - Thanks for the **Diversity Scholarship**!

- [R-Ladies S√£o Paulo](https://www.meetup.com/pt-BR/rladies-sao-paulo/) and [R-Ladies Global](http://r-ladies.org/)

-   [Curso-R](https://curso-r.com/) and [Julio Trecenti](https://github.com/jtrecenti), [Daniel Falbel](https://github.com/dfalbel), [Athos Damiani](https://github.com/Athospd)

-   Creators and contributors of [r-lib/actions](https://github.com/r-lib/actions)

-   [Articulation Inc.](https://www.articulationinc.com/)

## Beatriz Milz üáßüá∑ {.center .aboutmeslide}

-   Contact

    -   Twitter: [\@BeaMilz](https://twitter.com/BeaMilz)

    -   Blog: [beamilz.com](https://beamilz.com)

-   About Bea

    -   R-Ladies S√£o Paulo Co-organizer

    -   Teacher at [Curso-R](https://curso-r.com/)

    -   Tidyverse instructor certified by RStudio

<img src="img/octocat-1656339210373.png" style="right: -10px;height: 80%;top: -10px;position: absolute;"/>
